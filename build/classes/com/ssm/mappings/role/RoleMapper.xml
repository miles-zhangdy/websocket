<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ssm.business.role.dao.RoleMapper" >
  <resultMap id="BaseResultMap" type="com.ssm.business.role.model.Role" >
    <id column="role_id" property="roleId" jdbcType="BIGINT" />
    <result column="role_name" property="roleName" jdbcType="VARCHAR" />
    <result column="create_user" property="createUser" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="BIGINT" />
    <result column="alive_flag" property="aliveFlag" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    role_id, role_name, create_user, create_time, alive_flag
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long"  >
    select 
    <include refid="Base_Column_List" />
    from tbl_role
    where role_id = #{roleId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from tbl_role
    where role_id = #{roleId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.ssm.business.role.model.Role" useGeneratedKeys="true" keyProperty="roleId">
    insert into tbl_role (role_id, role_name, create_user, 
      create_time, alive_flag)
    values (#{roleId,jdbcType=BIGINT}, #{roleName,jdbcType=VARCHAR}, #{createUser,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=BIGINT}, #{aliveFlag,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.ssm.business.role.model.Role" useGeneratedKeys="true" keyProperty="roleId">
    insert into tbl_role
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="roleId != null" >
        role_id,
      </if>
      <if test="roleName != null" >
        role_name,
      </if>
      <if test="createUser != null" >
        create_user,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="aliveFlag != null" >
        alive_flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="roleId != null" >
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="roleName != null" >
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null" >
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="aliveFlag != null" >
        #{aliveFlag,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ssm.business.role.model.Role" >
    update tbl_role
    <set >
      <if test="roleName != null" >
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null" >
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="aliveFlag != null" >
        alive_flag = #{aliveFlag,jdbcType=INTEGER},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ssm.business.role.model.Role" >
    update tbl_role
    set role_name = #{roleName,jdbcType=VARCHAR},
      create_user = #{createUser,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=BIGINT},
      alive_flag = #{aliveFlag,jdbcType=INTEGER}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  
  <select id="getRolePageListCount" parameterType="map" resultType="int">
  	select count(0) from tbl_role
  	where 1=1
  	<if test="createUser != null">
  		and create_user = #{createUser}
  	</if>
  	<if test="aliveFlag != null or aliveFlag == 0">
  		and alive_flag = #{aliveFlag}
  	</if>
  </select>
  
  <select id="findRolePageList" parameterType="map" resultMap="BaseResultMap">
  	select 
	  <include refid="Base_Column_List" />
	 from tbl_role
  	where 1=1
  	<if test="createUser != null">
  		and create_user = #{createUser}
  	</if>
  	<if test="aliveFlag != null or aliveFlag == 0">
  		and alive_flag = #{aliveFlag}
  	</if>
  	order by create_time desc
  	limit #{beginIndex}, #{pageSize}
  </select>
</mapper>