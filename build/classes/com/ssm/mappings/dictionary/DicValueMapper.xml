<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ssm.business.dictionary.dao.DicValueMapper" >
  <resultMap id="BaseResultMap" type="com.ssm.business.dictionary.model.DicValue" >
    <id column="dic_value_id" property="dicValueId" jdbcType="BIGINT" />
    <result column="value_name" property="valueName" jdbcType="VARCHAR" />
    <result column="value_code" property="valueCode" jdbcType="VARCHAR" />
    <result column="dic_id" property="dicId" jdbcType="BIGINT" />
    <result column="create_user" property="createUser" jdbcType="BIGINT" />
    <result column="create_time" property="createTime" jdbcType="BIGINT" />
    <result column="alive_flag" property="aliveFlag" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    dic_value_id, value_name, value_code, dic_id, create_user, create_time, alive_flag
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from dic_value
    where dic_value_id = #{dicValueId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from dic_value
    where dic_value_id = #{dicValueId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.ssm.business.dictionary.model.DicValue" >
    insert into dic_value (dic_value_id, value_name, value_code, 
      dic_id, create_user, create_time, 
      alive_flag)
    values (#{dicValueId,jdbcType=BIGINT}, #{valueName,jdbcType=VARCHAR}, #{valueCode,jdbcType=VARCHAR}, 
      #{dicId,jdbcType=BIGINT}, #{createUser,jdbcType=BIGINT}, #{createTime,jdbcType=BIGINT}, 
      #{aliveFlag,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.ssm.business.dictionary.model.DicValue" >
    insert into dic_value
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="dicValueId != null" >
        dic_value_id,
      </if>
      <if test="valueName != null" >
        value_name,
      </if>
      <if test="valueCode != null" >
        value_code,
      </if>
      <if test="dicId != null" >
        dic_id,
      </if>
      <if test="createUser != null" >
        create_user,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="aliveFlag != null" >
        alive_flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="dicValueId != null" >
        #{dicValueId,jdbcType=BIGINT},
      </if>
      <if test="valueName != null" >
        #{valueName,jdbcType=VARCHAR},
      </if>
      <if test="valueCode != null" >
        #{valueCode,jdbcType=VARCHAR},
      </if>
      <if test="dicId != null" >
        #{dicId,jdbcType=BIGINT},
      </if>
      <if test="createUser != null" >
        #{createUser,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="aliveFlag != null" >
        #{aliveFlag,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ssm.business.dictionary.model.DicValue" >
    update dic_value
    <set >
      <if test="valueName != null" >
        value_name = #{valueName,jdbcType=VARCHAR},
      </if>
      <if test="valueCode != null" >
        value_code = #{valueCode,jdbcType=VARCHAR},
      </if>
      <if test="dicId != null" >
        dic_id = #{dicId,jdbcType=BIGINT},
      </if>
      <if test="createUser != null" >
        create_user = #{createUser,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="aliveFlag != null" >
        alive_flag = #{aliveFlag,jdbcType=INTEGER},
      </if>
    </set>
    where dic_value_id = #{dicValueId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ssm.business.dictionary.model.DicValue" >
    update dic_value
    set value_name = #{valueName,jdbcType=VARCHAR},
      value_code = #{valueCode,jdbcType=VARCHAR},
      dic_id = #{dicId,jdbcType=BIGINT},
      create_user = #{createUser,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=BIGINT},
      alive_flag = #{aliveFlag,jdbcType=INTEGER}
    where dic_value_id = #{dicValueId,jdbcType=BIGINT}
  </update>
</mapper>